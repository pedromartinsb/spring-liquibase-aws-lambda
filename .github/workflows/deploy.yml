name: Build and Deploy to AWS Lambda

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Configurar Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      # Build do projeto
      - name: Build with Maven
        run: mvn clean package

      # Listar arquivos gerados
      - name: List files in target
        run: ls -l target

      # Configurar AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Entrar no GitHub e acessar Settings > Secrets and Variables > Actions
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Entrar no GitHub e acessar Settings > Secrets and Variables > Actions
          aws-region: us-east-1

      # Fazer o deploy para AWS Lambda
      - name: Create or Update Function
        run: |
          FUNCTION_NAME=LiquibaseLambdaHandler
          if aws lambda get-function --function-name $FUNCTION_NAME; then
            echo "Updating function $FUNCTION_NAME"
            aws lambda update-function-code \
              --function-name $FUNCTION_NAME \
              --zip-file fileb://target/liquibase-demo-1.0.0.jar
          else
            echo "Creating function $FUNCTION_NAME"
            aws lambda create-function \
              --function-name $FUNCTION_NAME \
              --runtime java17 \
              --role arn:aws:iam::293268282747:role/LambdaExecutionRole \
              --handler com.example.demo.LiquibaseLambdaHandler \
              --zip-file fileb://target/liquibase-demo-1.0.0.jar \
              --timeout 15 \
              --memory-size 512
          fi

      # Criar e verificar o payload
      - name: Create and Verify Payload
        run: |
          echo '{"input": "Test Execution"}' > payload.json
          echo "Payload contents:"
          cat payload.json

      # Executar a função Lambda
      - name: Execute AWS Lambda
        run: |
          aws lambda invoke \
            --function-name LiquibaseLambdaHandler \
            --cli-binary-format raw-in-base64-out \
            output.json

      # Exibir a saída da execução
      - name: Show Lambda Execution Output
        run: cat output.json
